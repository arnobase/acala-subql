type KVData @jsonField {
  key: String
  value: String
  type: String
}

type SystemConsts @entity {
  id: ID!
  liquidToken: Token
  stakignToken: Token
  nativeToken: Token
  stableToken: Token
}

type Block @entity {
  id: ID!

  number: BigInt
  timestamp: Date
  parentHash: String
  specVersion: String
  stateRoot: String
  extrinsicRoot: String

  extrinsics: [Extrinsic] @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID!

  method: String
  section: String
  args: [KVData]
  signer: Account
  nonce: BigInt
  timestamp: Date
  signature: String
  tip: String
  isSigned: Boolean
  isSuccess: Boolean

  block: Block
  events: [Event] @derivedFrom(field: "extrinsic")
  
}

type Call @entity {
  id: ID!

  section: String
  method: String
  args:[KVData] 
  timestamp: Date
  isSuccess: Boolean

  signer: Account
  extrinsic: Extrinsic
  parentCall: Call

  calls: [Call] @derivedFrom(field: "parentCall")
}

type Event @entity {
  id: ID!

  index: Int
  section: String
  method: String
  data: [KVData]

  timestamp: Date
  blockNumber: BigInt
  block: Block
  extrinsic: Extrinsic
}

type Account @entity {
  id: ID!

  txCount: BigInt
  createAtBlock: Block

  extrinsics: [Extrinsic] @derivedFrom(field: "signer")
}

# token
type Token @entity {
  id: ID!

  # the token name
  name: String
  # the token decimal
  decimal: Int

  # the price form dex
  price: String

  # total issuance
  issuance: String

  # locked amount in loan
  lockedInLoan: String
  # locked amount in dex
  lockedInDex: String
  # locked amount in incentive
  lockedInIncentive: String

  volume: String
  volumeUSD: String
  txCount: BigInt

  poolDayDataBase: [PoolDayData] @derivedFrom(field: "token0")
  poolDayDataQuote: [PoolDayData] @derivedFrom(field: "token1")
  poolBase: [Pool] @derivedFrom(field: "token0")
  poolQuote: [Pool] @derivedFrom(field: "token1")
}

# dex
type Pool @entity {
  id: ID!

  token0: Token
  token1: Token

  # avaiable token0 amount
  token0Amount: String
  # avaiable token1 amount
  token1Amount: String

  # the exchange ratio token0:token1
  exchange0: String
  # the exchange ratio token1:token0
  exchange1: String

  # the fee rate of pool
  fee: String

  # token0 swap volume
  token0Volume: String
  # token1 swap volume
  token1Volume: String
  # total swap volume in usd
  volumeUSD: String

  # token0 total value of locked
  token0TVL: String
  # token1 total value of locked
  token1TVL: String
  # total value of locked
  tvlUSD: String

  # tx count
  txCount: BigInt

  mn15Data: [Pool15MnData] @derivedFrom(field: "pool")
  hourData: [PoolHourData] @derivedFrom(field: "pool")
  dayData: [PoolDayData] @derivedFrom(field: "pool")
}

type PoolHourData @entity {
  id: ID!

  pool: Pool
  date: Date
  #blockNumber: [BigInt]

  token0: Token
  token1: Token

  token0Amount: String
  token1Amount: String
  
  # Arno
  rateToken0Token1: String
  rateToken0Token1High: String
  rateToken0Token1Low: String
  rateToken0Token1Open: String
  rateToken0Token1Close: String
  rateToken1Token0: String
  rateToken1Token0High: String
  rateToken1Token0Low: String
  rateToken1Token0Open: String
  rateToken1Token0Close: String
  ##
  
  exchange0: String
  exchange1: String

  volumeToken0: String
  volumeToken1: String
  volumeUSD: String

  txCount: BigInt

  tvlUSD: String
}

type Pool15MnData @entity {
  id: ID!

  pool: Pool
  date: Date
  #blockNumber: [BigInt]

  token0: Token
  token1: Token

  token0Amount: String
  token1Amount: String
  
  rateToken0Token1: String
  rateToken0Token1High: String
  rateToken0Token1Low: String
  rateToken0Token1Open: String
  rateToken0Token1Close: String
  rateToken1Token0: String
  rateToken1Token0High: String
  rateToken1Token0Low: String
  rateToken1Token0Open: String
  rateToken1Token0Close: String
  
  exchange0: String
  exchange1: String

  volumeToken0: String
  volumeToken1: String
  volumeUSD: String

  txCount: BigInt

  tvlUSD: String

}

type Pool1MnData @entity {
  id: ID!

  pool: Pool
  date: Date
  #blockNumber: [BigInt]

  token0: Token
  token1: Token

  token0Amount: String
  token1Amount: String
  
  rateToken0Token1: String
  rateToken0Token1High: String
  rateToken0Token1Low: String
  rateToken0Token1Open: String
  rateToken0Token1Close: String
  rateToken1Token0: String
  rateToken1Token0High: String
  rateToken1Token0Low: String
  rateToken1Token0Open: String
  rateToken1Token0Close: String
  
  exchange0: String
  exchange1: String

  volumeToken0: String
  volumeToken1: String
  volumeUSD: String

  txCount: BigInt

  tvlUSD: String
}

type PoolBlockData @entity {
  id: ID!

  pool: Pool
  date: Date
  blockNumber: BigInt

  token0: Token
  token1: Token

  token0Amount: String
  token1Amount: String
  
  rateToken0Token1: String
  rateToken0Token1High: String
  rateToken0Token1Low: String
  rateToken0Token1Open: String
  rateToken0Token1Close: String
  rateToken1Token0: String
  rateToken1Token0High: String
  rateToken1Token0Low: String
  rateToken1Token0Open: String
  rateToken1Token0Close: String
  
  exchange0: String
  exchange1: String

  volumeToken0: String
  volumeToken1: String
  volumeUSD: String

  txCount: BigInt

  tvlUSD: String
}

type PoolDayData @entity {
  id: ID!

  pool: Pool
  token0: Token!
  token1: Token!

  date: Date
  #blockNumber: [BigInt]
  
  token0Amount: String
  token1Amount: String

  rateToken0Token1: String
  rateToken0Token1High: String
  rateToken0Token1Low: String
  rateToken0Token1Open: String
  rateToken0Token1Close: String
  rateToken1Token0: String
  rateToken1Token0High: String
  rateToken1Token0Low: String
  rateToken1Token0Open: String
  rateToken1Token0Close: String

  exchange0: String
  exchange1: String

  volumeToken0: String
  volumeToken1: String
  volumeUSD: String

  txCount: BigInt

  tvlUSD: String

  token0Open: String
  token0High: String
  token0Low: String
  token0Close: String
}

type Dex @entity {
  id: ID!

  poolCount: Int

  totalVolumeUSD: String
  totalTVLUSD: String
}



